pos = as.data.frame(track$poswh)
pos
x = prepData(data = pos, type = "LL", coordNames = c("V2", "V1"))
View(x)
library(dplyr)
pos$index = 1:nrow(pos)
5*60
pos$index%%6*60
pos_ds = pos[pos$index%%6*60==0]
pos_ds = pos[pos$index%%6*60==0,]
pos_ds
pos_ds = pos[pos$index%%(5*60)==0,]
pos_ds
pos_ds = pos[pos$index == 1 | pos$index-1%%(5*60)==0,]
pos_ds
pos$index-1%%(5*60)
pos$index
pos$index-1
pos$index-1%%(5*60)
pos$index%%(5*60)
pos_ds = pos[pos$index == 1 | (pos$index-1)%%(5*60)==0,]
(pos$index-1)%%(5*60)==0,]
(pos$index-1)%%(5*60)
(pos$index-1)%%(5*60)==0
pos_ds = pos[(pos$index-1)%%(5*60)==0,]
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(5*60)==0,]
View(pos_ds)
pos_ds = pos[(pos$index-1)%%(5)==0,]
x = prepData(data = pos_ds, type = "LL", coordNames = c("V2", "V1"))
x
plot(x)
fit = fitHMM(data = x, nbStates = 2)
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"))
stepPar0 <- c(1,5,0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
stepPar0 <- c(1,5,0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
stepPar0 <- c(0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
stepPar0 <- c(1,5,0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
plot(fit)
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
plot(fit)
summary(fit)
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
states = viterbi(fit)
plot(states)
table(states)/nrow(x)
state
states
fit
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
plot(x)
# starting values
stepPar0 <- c(1,5,0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
states = viterbi(fit)
table(states)/nrow(x)
table(states)
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt"
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(5)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
)
i = i+1
scan()
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt"
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(5)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
)
i = i+1
scan()
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(5)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
scan()
}
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt"
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(5)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
scan()
}
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
# starting values
stepPar0 <- c(1e-3,0.2,0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
viterbi(fit)
plot(fit)
pdf("2state.pdf")
plot(fit)
dev.off()
# initial angle distribution natural scale parameters
anglePar0 <- c(0.5,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0))
pdf("2state.pdf")
plot(fit)
dev.off
dev.off()
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
states = viterbi(fit)
pdf("2state.pdf")
plot(fit)
dev.off()
10/ (5*60)
10/3
5*60
5*60/10
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(30)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
scan()
}
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
# starting values
stepPar0 <- c(1e-3,0.2,0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
states = viterbi(fit)
pdf("2state.pdf")
plot(fit)
dev.off()
10*6
2*60
5*60
3*60
# Alec Burslem
# acb35@st-andrews.ac.uk
# May 2024
#housekeeping ----
library(momentuHMM)
library(dplyr)
ups_dir = "D:\\Raw\\3S4\\Pseuedotracks\\"
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(18)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
scan()
}
# starting values
stepPar0 <- c(1e-3,0.2,0.5,3) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,8) #
plot(x)
? momentuHMM::plot
plot(x)
plot(x)
fit
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
plot(x)
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
# starting values
stepPar0 <- c(0.05,0.125,0.02,0.01) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,15) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
#states = viterbi(fit)
pdf("2state_2min.pdf")
plot(fit)
dev.off()
# Alec Burslem
# acb35@st-andrews.ac.uk
# May 2024
#housekeeping ----
library(momentuHMM)
library(dplyr)
ups_dir = "D:\\Raw\\3S4\\Pseuedotracks\\"
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(18)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
scan()
}
# Alec Burslem
# acb35@st-andrews.ac.uk
# May 2024
#housekeeping ----
library(momentuHMM)
library(dplyr)
ups_dir = "D:\\Raw\\3S4\\Pseuedotracks\\"
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
plot(track$pos.gps)
plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(18)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
scan()
}
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
plot(x)
# Alec Burslem
# acb35@st-andrews.ac.uk
# May 2024
#housekeeping ----
library(momentuHMM)
library(dplyr)
ups_dir = "D:\\Raw\\3S4\\Pseuedotracks\\"
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt", "oo23_295a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
#plot(track$pos.gps)
#plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(18)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
#scan()
}
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
pdf("2min_explor.pdf")
plot(x, ask = FALSE)
dev.off()
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
#states = viterbi(fit)
pdf("2state_2min.pdf")
plot(fit)
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
pdf("2min_explor.pdf")
plot(x, ask = FALSE)
dev.off()
# starting values
stepPar0 <- c(0.05,0.125,0.02,0.01) # (mu_1,mu_2,sd_1,sd_2)
# initial angle distribution natural scale parameters
anglePar0 <- c(0,0,1,15) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=TRUE))
#states = viterbi(fit)
pdf("2state_2min.pdf")
plot(fit, ask = FALSE)
dev.off()
5*60
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
res*6
res = 5
res*6
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
fit
fit
source("D:/Analysis/3S4/Killer whale HMMs/HMM3.R")
fit
source("D:/Analysis/3S4/Killer whale HMMs/HMM3.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM3.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM3.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
fit
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM3.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM.R")
source("D:/Analysis/3S4/Killer whale HMMs/HMM7.R")
fit
# Alec Burslem
# acb35@st-andrews.ac.uk
# May 2024
#housekeeping ----
library(momentuHMM)
library(dplyr)
ups_dir = "D:\\Raw\\3S4\\Pseuedotracks\\"
res = 3
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt","oo23_299b_pt", "oo23_302a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
#plot(track$pos.gps)
#plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(res*6)==0,]
pos_ds$ID = i
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
#scan()
}
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
pdf(paste("2state_",res,"min_explor.pdf", sep = ""))
plot(x, ask = FALSE)
dev.off()
# starting values
stepPar0 <- c(0.05,0.125,0.02,0.15) # (mu_1,mu_2,sd_1,sd_2...)
# initial angle distribution natural scale parameters
anglePar0 <- c(1,15) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=FALSE))
#states = viterbi(fit)
pdf(paste("2state_",res,"min.pdf", sep = ""))
plot(fit, ask = FALSE)
dev.off()
fit
states = viterbi(fit)
View(track)
View(track)
track[["twh"]]
fit
View(x)
x
plot(x, ask = FALSE)
View(x)
pos
pos$index
pos_ds
deploy
track$twh[pos_ds$index]
# Alec Burslem
# acb35@st-andrews.ac.uk
# May 2024
#housekeeping ----
library(momentuHMM)
library(dplyr)
ups_dir = "D:\\Raw\\3S4\\Pseuedotracks\\"
res = 3
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt","oo23_299b_pt", "oo23_302a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
#plot(track$pos.gps)
#plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(res*6)==0,]
pos_ds$ID = i
pos_ds$deploy = deploy
pos_ds$twh = track$twh[pos_ds$index]
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
#scan()
}
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
pdf(paste("2state_",res,"min_explor.pdf", sep = ""))
plot(x, ask = FALSE)
dev.off()
# starting values
stepPar0 <- c(0.05,0.125,0.02,0.15) # (mu_1,mu_2,sd_1,sd_2...)
# initial angle distribution natural scale parameters
anglePar0 <- c(1,15) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=FALSE))
states = viterbi(fit)
pdf(paste("2state_",res,"min.pdf", sep = ""))
plot(fit, ask = FALSE)
dev.off()
View(fit)
x
write.csv(x, file = paste("2state_",res,"min_explor.csv", sep = ""))
write.csv(x, file = paste("HMM_2state_",res,"min.csv", sep = ""))
states
View(fit)
mas_posds$state = state
mas_posds$state = states
write.csv(x, file = paste("HMM_2state_",res,"min.csv", sep = ""))
x$state = states
write.csv(x, file = paste("HMM_2state_",res,"min.csv", sep = ""))
plot(x$twh)
# Alec Burslem
# acb35@st-andrews.ac.uk
# May 2024
#housekeeping ----
library(momentuHMM)
library(dplyr)
ups_dir = "D:\\Raw\\3S4\\Pseuedotracks\\"
res = 3
# load a track
deploys = c("oo23_292b_pt", "oo23_295a_pt", "oo23_295b_pt", "oo23_299a_pt","oo23_299b_pt", "oo23_302a_pt")
# look at gps coverage
i = 1
for(deploy in deploys){
track = R.matlab::readMat(paste(ups_dir,deploy,".mat", sep = ""))
#plot(track$pos.gps)
#plot(track$poswh)
pos = as.data.frame(track$poswh)
pos$index = 1:nrow(pos)
pos_ds = pos[(pos$index-1)%%(res*6)==0,]
pos_ds$ID = i
pos_ds$deploy = deploy
pos_ds$twh = track$twh[pos_ds$index]
if(i == 1){mas_posds = pos_ds}
else{mas_posds = rbind(mas_posds,pos_ds)}
i = i+1
#scan()
}
x = prepData(data = mas_posds, type = "LL", coordNames = c("V2", "V1"))
plot(x, ask = FALSE)
stepPar0 <- c(0.05,0.125,0.02,0.15) # (mu_1,mu_2,sd_1,sd_2...)
# initial angle distribution natural scale parameters
anglePar0 <- c(1,15) #
plot(x, ask = FALSE)
dev.off()
# starting values
stepPar0 <- c(0.05,0.125,0.02,0.15) # (mu_1,mu_2,sd_1,sd_2...)
# initial angle distribution natural scale parameters
anglePar0 <- c(1,15) #
fit = fitHMM(data = x, nbStates = 2, dist = list(step = "gamma", angle = "vm"),Par0 = list(step = stepPar0, angle = anglePar0),estAngleMean = list(angle=FALSE))
states = viterbi(fit)
states = viterbi(fit)
plot(fit, ask = FALSE)
mas_posds
x
plot(x, ask = FALSE)
