}
summary.indiv[,1]<-whales
for(j in 1:length(whales)){
filterbool2<-tab$whale.num==j
tab2<-tab[filterbool2,]
summary.indiv[j,2]<-nrow(tab2)    #Number of glides used for the model
}
whales
### make summary table for WHALE-BY-WHALE mean
if(length(fit$BUGSoutput$mean$body.density)==length(whales) ||length(fit$BUGSoutput$mean$CdAM)==length(whales)||
length(fit$BUGSoutput$mean$Vair.d)==length(whales)){
summary.indiv<-matrix(data=NA, nrow=length(whales), ncol=14)
colnames(summary.indiv)<-c("ID", "numGlides", "meanBD", "L95BD", "U95BD", "95rangeBD", "meanCdAM", "L95CdAM",
"U95CdAM", "95rangeCdAM", "meanVair", "L95Vair", "U95Vair",  "95rangeVair")
}
summary.indiv[,1]<-whales
summary.indiv
### make summary table for WHALE-BY-WHALE mean
if(length(fit$BUGSoutput$mean$body.density)==length(whales) ||length(fit$BUGSoutput$mean$CdAM)==length(whales)||
length(fit$BUGSoutput$mean$Vair.d)==length(whales)){
summary.indiv<-matrix(data=NA, nrow=length(whales), ncol=14)
colnames(summary.indiv)<-c("ID", "numGlides", "meanBD", "L95BD", "U95BD", "95rangeBD", "meanCdAM", "L95CdAM",
"U95CdAM", "95rangeCdAM", "meanVair", "L95Vair", "U95Vair",  "95rangeVair")
}
length(fit$BUGSoutput$mean$body.density)==length(whales) ||length(fit$BUGSoutput$mean$CdAM)==length(whales)
fit$BUGSoutput$mean$body.density
length(whales)
length(fit$BUGSoutput$mean$body.density)==length(whales)
length(whales)
whales
tab$whale.id
View(tab)
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
View(tab2)
View(tab)
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
filterBool
View(tab)
#& tab$mean.depth>200 & tab$sonar==0 & tab$vertglide==1
tab <- tab[filterBool,]
View(tab)
fitName <- "_f_pitch30_depth100_rpitch999_thinned"
whales <- unique(tab$whale.id)
tab$whale.id
# load the selected model
m<-1
load(paste(modelDir,modelName[m], fitName, ".Rd", sep=""))
### make summary table for GLOBAL mean
summary.g<-matrix(data=NA, nrow = 1, ncol = 16)
colnames(summary.g)<-c("meanBD.g", "L95BD.g", "U95BD.g","95rangeBD.g", "meanCdAM.g", "L95CdAM.g", "U95CdAM.g", "95rangeCdAM.g",
"meanVair", "L95Vair", "U95Vair", "95rangeVair.g", "meanCompr", "L95Compr", "U95Compr", "95rangeCompr")
summary.g[1]<-signif(mean(fit$BUGSoutput$sims.list$body.density.g), digits = 5)                 # mean global body density
summary.g[2]<-signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025), digits=5)  #lower 95% CRI global body density
summary.g[3]<- signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975), digits=5)  #upper 95% CRI global body density
summary.g[4]<- signif((quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025)), digits=5)     # 95%CRI range for global body density
summary.g[5]<-signif(mean(fit$BUGSoutput$sims.list$CdAM.g), digits = 3)              # mean global CdAM
summary.g[6]<-signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025), digits=3)  #lower 95% CRI global CdAM
summary.g[7]<- signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975), digits=3)  #upper 95% CRI global CdAM
summary.g[8]<- signif((quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025)), digits=3)    # 95%CRI range for global CdAM
summary.g[9]<-signif(mean(fit$BUGSoutput$sims.list$Vair), digits = 6)                # mean global global Vair
summary.g[10]<-signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025), digits=3)  #lower 95% CRI global Vair
summary.g[11]<- signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975), digits=3)  #upper 95% CRI global Vair
summary.g[12]<- signif((quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025)), digits=3)      # 95%CRI range for global Vair
summary.g[13]<-signif(mean(fit$BUGSoutput$sims.list$compr), digits = 3)                # mean compressibility
summary.g[14]<-signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.025), digits=3)  #lower 95% CRI compressibility
summary.g[15]<- signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.975), digits=3)  #upper 95% CRI compressibility
summary.g[16]<- signif((quantile(fit$BUGSoutput$sims.list$compr, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$compr, prob=0.025)), digits=3)    # 95%CRI range for compressibility
write.csv(summary.g, file=paste(modelDir, modelName[m], fitName, "_Estimates_global.csv", sep=""))
### make summary table for WHALE-BY-WHALE mean
if(length(fit$BUGSoutput$mean$body.density)==length(whales) ||length(fit$BUGSoutput$mean$CdAM)==length(whales)||
length(fit$BUGSoutput$mean$Vair.d)==length(whales)){
summary.indiv<-matrix(data=NA, nrow=length(whales), ncol=14)
colnames(summary.indiv)<-c("ID", "numGlides", "meanBD", "L95BD", "U95BD", "95rangeBD", "meanCdAM", "L95CdAM",
"U95CdAM", "95rangeCdAM", "meanVair", "L95Vair", "U95Vair",  "95rangeVair")
}
summary.indiv[,1]<-whales
length(fit$BUGSoutput$mean$body.density)
length(whales)
whales
fit$BUGSoutput$mean$body.density
unique(tab$whale.id)
View(summary.g)
source("D:/Analysis/3S4/Body density/Make_summary_table.R")
fit$BUGSoutput$mean$body.density)
fit$BUGSoutput$mean$body.density
dataDir<-"..//Data//"
modelDir <- "D:\\Analysis\\3S4\\Body density\\oo_models_GS"
downstreamDir = ""
setwd(modelDir)
library(R2jags)
require(dplyr)
set.seed(1990)
load(paste(dataDir,"all_whales.Rd",sep=""))
View(tab)
unique(tab$whale.id)
unique(tab$whale.id)
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
# #AB- look for and thin consecutive subglides
lag_end = lag(tab$end.pt,1,FALSE)
is_sub = lag_end == tab$start.pt # where start time is equal to end time for glide(n-1)
sub_index = ave(is_sub, cumsum(!is_sub), FUN = cumsum)+1 #subglide counter
tab$sg.index = sub_index # replace subglide index
tab <- tab[tab$sg.index%%2!=0,] #drop every other subglide
#AB - drop whales where the thinning takes n below 20
test <- tapply(tab$whale.id,tab$whale.id,length)
keepw <- names(test[test>20])
dropw <- names(test[test<20])
print("following whales dropped after thinning:")
for (x in dropw) {
print(x)
}
tab <- tab[tab$whale.id %in% keepw,]
unique(tab$whale.id)
dropw
#AB - drop whales where the thinning takes n below 20
test <- tapply(tab$whale.id,tab$whale.id,length)
test
load(paste(dataDir,"all_whales.Rd",sep=""))
length(unique(tab$whale.id))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
length(unique(tab$whale.id))
# #AB- look for and thin consecutive subglides
lag_end = lag(tab$end.pt,1,FALSE)
is_sub = lag_end == tab$start.pt # where start time is equal to end time for glide(n-1)
sub_index = ave(is_sub, cumsum(!is_sub), FUN = cumsum)+1 #subglide counter
tab$sg.index = sub_index # replace subglide index
tab <- tab[tab$sg.index%%2!=0,] #drop every other subglide
length(unique(tab$whale.id))
#AB - drop whales where the thinning takes n below 20
test <- tapply(tab$whale.id,tab$whale.id,length)
keepw <- names(test[test>20])
dropw <- names(test[test<20])
print("following whales dropped after thinning:")
for (x in dropw) {
print(x)
}
tab <- tab[tab$whale.id %in% keepw,]
length(unique(tab$whale.id))
keepw
test
keepw
keepw <- names(test[test=>20])
dropw <- names(test[test<20])
keepw
#AB - drop whales where the thinning takes n below 20
test <- tapply(tab$whale.id,tab$whale.id,length)
keepw <- names(test[test=>20])
keepw <- names(test[test>=20])
keepw
dropw <- names(test[test<20])
print("following whales dropped after thinning:")
for (x in dropw) {
print(x)
}
tab <- tab[tab$whale.id %in% keepw,]
length(unique(tab$whale.id))
keepw
test
#AB - drop whales where the thinning takes n below 20
test <- tapply(tab$whale.id,tab$whale.id,length)
#to do:
# see if a solution for lag() exists in base R
dataDir<-"..//Data//"
modelDir <- "D:\\Analysis\\3S4\\Body density\\oo_models_GS"
downstreamDir = ""
setwd(modelDir)
library(R2jags)
require(dplyr)
set.seed(1990)
## load & filter data
# -> defines "fitName" that is used to store model output in working directory
# store filtered data & the names of whales and dives that are included
load(paste(dataDir,"all_whales.Rd",sep=""))
length(unique(tab$whale.id))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
length(unique(tab$whale.id))
# #AB- look for and thin consecutive subglides
lag_end = lag(tab$end.pt,1,FALSE)
is_sub = lag_end == tab$start.pt # where start time is equal to end time for glide(n-1)
sub_index = ave(is_sub, cumsum(!is_sub), FUN = cumsum)+1 #subglide counter
tab$sg.index = sub_index # replace subglide index
tab <- tab[tab$sg.index%%2!=0,] #drop every other subglide
length(unique(tab$whale.id))
#AB - drop whales where the thinning takes n below 20
test <- tapply(tab$whale.id,tab$whale.id,length)
keepw <- names(test[test>=20])
dropw <- names(test[test<20])
print("following whales dropped after thinning:")
for (x in dropw) {
print(x)
}
tab <- tab[tab$whale.id %in% keepw,]
length(unique(tab$whale.id))
length(unique(tab$whale.id))
source("D:/Analysis/3S4/Body density/estimate_all_models_AB.R")
source("D:/Analysis/3S4/Body density/estimate_all_models_AB.R")
source("D:/Analysis/3S4/Body density/estimate_all_models_AB.R")
######## Make summary table for estimates of the selected model
setwd("D:\\Analysis\\3S4\\Body density\\")
dataDir<-"D:\\Analysis\\3S4\\Body density\\Data\\"
modelDir<-"D:\\Analysis\\3S4\\Body density\\oo_models_GS\\"
### SELECT THE MODEL
modelName<-c("model(oo12)")   ############ set the selected model
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
#& tab$mean.depth>200 & tab$sonar==0 & tab$vertglide==1
tab <- tab[filterBool,]
fitName <- "_f_pitch30_depth100_rpitch999_thinned"
whales <- unique(tab$whale.id)
# load the selected model
m<-1
load(paste(modelDir,modelName[m], fitName, ".Rd", sep=""))
### make summary table for GLOBAL mean
summary.g<-matrix(data=NA, nrow = 1, ncol = 16)
colnames(summary.g)<-c("meanBD.g", "L95BD.g", "U95BD.g","95rangeBD.g", "meanCdAM.g", "L95CdAM.g", "U95CdAM.g", "95rangeCdAM.g",
"meanVair", "L95Vair", "U95Vair", "95rangeVair.g", "meanCompr", "L95Compr", "U95Compr", "95rangeCompr")
summary.g[1]<-signif(mean(fit$BUGSoutput$sims.list$body.density.g), digits = 5)                 # mean global body density
summary.g[2]<-signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025), digits=5)  #lower 95% CRI global body density
summary.g[3]<- signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975), digits=5)  #upper 95% CRI global body density
summary.g[4]<- signif((quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025)), digits=5)     # 95%CRI range for global body density
summary.g[5]<-signif(mean(fit$BUGSoutput$sims.list$CdAM.g), digits = 3)              # mean global CdAM
summary.g[6]<-signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025), digits=3)  #lower 95% CRI global CdAM
summary.g[7]<- signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975), digits=3)  #upper 95% CRI global CdAM
summary.g[8]<- signif((quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025)), digits=3)    # 95%CRI range for global CdAM
summary.g[9]<-signif(mean(fit$BUGSoutput$sims.list$Vair), digits = 6)                # mean global global Vair
summary.g[10]<-signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025), digits=3)  #lower 95% CRI global Vair
summary.g[11]<- signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975), digits=3)  #upper 95% CRI global Vair
summary.g[12]<- signif((quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025)), digits=3)      # 95%CRI range for global Vair
summary.g[13]<-signif(mean(fit$BUGSoutput$sims.list$compr), digits = 3)                # mean compressibility
summary.g[14]<-signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.025), digits=3)  #lower 95% CRI compressibility
summary.g[15]<- signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.975), digits=3)  #upper 95% CRI compressibility
summary.g[16]<- signif((quantile(fit$BUGSoutput$sims.list$compr, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$compr, prob=0.025)), digits=3)    # 95%CRI range for compressibility
write.csv(summary.g, file=paste(modelDir, modelName[m], fitName, "_Estimates_global.csv", sep=""))
### make summary table for WHALE-BY-WHALE mean
if(length(fit$BUGSoutput$mean$body.density)==length(whales) ||length(fit$BUGSoutput$mean$CdAM)==length(whales)||
length(fit$BUGSoutput$mean$Vair.d)==length(whales)){
summary.indiv<-matrix(data=NA, nrow=length(whales), ncol=14)
colnames(summary.indiv)<-c("ID", "numGlides", "meanBD", "L95BD", "U95BD", "95rangeBD", "meanCdAM", "L95CdAM",
"U95CdAM", "95rangeCdAM", "meanVair", "L95Vair", "U95Vair",  "95rangeVair")
}
summary.indiv[,1]<-whales
for(j in 1:length(whales)){
filterbool2<-tab$whale.num==j
tab2<-tab[filterbool2,]
summary.indiv[j,2]<-nrow(tab2)    #Number of glides used for the model
}
length(fit$BUGSoutput$mean$body.density)
length(whales)
whales
unique(tab$whale.id)
tab
View(tab)
tab <- tab[filterBool & !is.na(filterBool),]
View(sp.data)
View(tab)
filterBool
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
View(tab)
#& tab$mean.depth>200 & tab$sonar==0 & tab$vertglide==1
tab <- tab[filterBool,]
fitName <- "_f_pitch30_depth100_rpitch999_thinned"
whales <- unique(tab$whale.id)
whales
######## Make summary table for estimates of the selected model
setwd("D:\\Analysis\\3S4\\Body density\\")
dataDir<-"D:\\Analysis\\3S4\\Body density\\Data\\"
modelDir<-"D:\\Analysis\\3S4\\Body density\\oo_models_GS\\"
### SELECT THE MODEL
modelName<-c("model(oo12)")   ############ set the selected model
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
#& tab$mean.depth>200 & tab$sonar==0 & tab$vertglide==1
tab <- tab[filterBool,]
fitName <- "_f_pitch30_depth100_rpitch999_thinned"
whales <- unique(tab$whale.id)
whales
######## Make summary table for estimates of the selected model
setwd("D:\\Analysis\\3S4\\Body density\\")
dataDir<-"D:\\Analysis\\3S4\\Body density\\Data\\"
modelDir<-"D:\\Analysis\\3S4\\Body density\\oo_models_GS\\"
### SELECT THE MODEL
modelName<-c("model(oo12)")   ############ set the selected model
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
#& tab$mean.depth>200 & tab$sonar==0 & tab$vertglide==1
tab <- tab[filterBool,]
fitName <- "_f_pitch30_depth100_rpitch999_thinned"
whales <- unique(tab$whale.id)
# load the selected model
m<-1
load(paste(modelDir,modelName[m], fitName, ".Rd", sep=""))
whales
summary.g<-matrix(data=NA, nrow = 1, ncol = 16)
colnames(summary.g)<-c("meanBD.g", "L95BD.g", "U95BD.g","95rangeBD.g", "meanCdAM.g", "L95CdAM.g", "U95CdAM.g", "95rangeCdAM.g",
"meanVair", "L95Vair", "U95Vair", "95rangeVair.g", "meanCompr", "L95Compr", "U95Compr", "95rangeCompr")
summary.g[1]<-signif(mean(fit$BUGSoutput$sims.list$body.density.g), digits = 5)                 # mean global body density
summary.g[2]<-signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025), digits=5)  #lower 95% CRI global body density
summary.g[3]<- signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975), digits=5)  #upper 95% CRI global body density
summary.g[4]<- signif((quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025)), digits=5)     # 95%CRI range for global body density
summary.g[5]<-signif(mean(fit$BUGSoutput$sims.list$CdAM.g), digits = 3)              # mean global CdAM
summary.g[6]<-signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025), digits=3)  #lower 95% CRI global CdAM
summary.g[7]<- signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975), digits=3)  #upper 95% CRI global CdAM
summary.g[8]<- signif((quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025)), digits=3)    # 95%CRI range for global CdAM
summary.g[9]<-signif(mean(fit$BUGSoutput$sims.list$Vair), digits = 6)                # mean global global Vair
summary.g[10]<-signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025), digits=3)  #lower 95% CRI global Vair
summary.g[11]<- signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975), digits=3)  #upper 95% CRI global Vair
summary.g[12]<- signif((quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025)), digits=3)      # 95%CRI range for global Vair
summary.g[13]<-signif(mean(fit$BUGSoutput$sims.list$compr), digits = 3)                # mean compressibility
summary.g[14]<-signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.025), digits=3)  #lower 95% CRI compressibility
summary.g[15]<- signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.975), digits=3)  #upper 95% CRI compressibility
summary.g[16]<- signif((quantile(fit$BUGSoutput$sims.list$compr, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$compr, prob=0.025)), digits=3)    # 95%CRI range for compressibility
write.csv(summary.g, file=paste(modelDir, modelName[m], fitName, "_Estimates_global.csv", sep=""))
whales
######## Make summary table for estimates of the selected model
setwd("D:\\Analysis\\3S4\\Body density\\")
dataDir<-"D:\\Analysis\\3S4\\Body density\\Data\\"
modelDir<-"D:\\Analysis\\3S4\\Body density\\oo_models_GS\\"
### SELECT THE MODEL
modelName<-c("model(oo12)")   ############ set the selected model
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
#& tab$mean.depth>200 & tab$sonar==0 & tab$vertglide==1
tab <- tab[filterBool,]
fitName <- "_f_pitch30_depth100_rpitch999_thinned"
unique(tab$whale.id)
######## Make summary table for estimates of the selected model
setwd("D:\\Analysis\\3S4\\Body density\\")
dataDir<-"D:\\Analysis\\3S4\\Body density\\Data\\"
modelDir<-"D:\\Analysis\\3S4\\Body density\\oo_models_GS\\"
### SELECT THE MODEL
modelName<-c("model(oo12)")   ############ set the selected model
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
unique(tab$whale.id)
filterBool
is.na(filterBool)
tab <- tab[filterBool & !is.na(filterBool),]
unique(tab$whale.id)
tab$whale.id
abs(tab$mean.pitch)>30
#to do:
# see if a solution for lag() exists in base R
dataDir<-"..//Data//"
modelDir <- "D:\\Analysis\\3S4\\Body density\\oo_models_GS"
downstreamDir = ""
setwd(modelDir)
library(R2jags)
require(dplyr)
set.seed(1990)
## load & filter data
# -> defines "fitName" that is used to store model output in working directory
# store filtered data & the names of whales and dives that are included
load(paste(dataDir,"all_whales.Rd",sep=""))
length(unique(tab$whale.id))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
length(unique(tab$whale.id))
tab
filterBool
tab$whale.id
load(paste(dataDir,"all_whales.Rd",sep=""))
length(unique(tab$whale.id))
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
length(unique(tab$whale.id))
#& tab$mean.depth>200 & tab$sonar==0 & tab$vertglide==1
tab <- tab[filterBool,]
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
fitName <- "_f_pitch30_depth100"
whales <- unique(tab$whale.id)
whales
whales <- unique(tab$whale.id)
# load the selected model
m<-1
load(paste(modelDir,modelName[m], fitName, ".Rd", sep=""))
### make summary table for GLOBAL mean
summary.g<-matrix(data=NA, nrow = 1, ncol = 16)
setwd("D:\\Analysis\\3S4\\Body density\\")
dataDir<-"D:\\Analysis\\3S4\\Body density\\Data\\"
modelDir<-"D:\\Analysis\\3S4\\Body density\\oo_models_GS\\"
### SELECT THE MODEL
modelName<-c("model(oo12)")   ############ set the selected model
# load & filter data -> fitName
load(paste(dataDir,"all_whales.Rd", sep = ""))
filterBool <- abs(tab$mean.pitch)>30 & tab$dive.max.depth>60 & abs(tab$phase)>0 & is.na(tab$acceleration)==F &
is.na(tab$mean.speed)==F & tab$r.roll>0.9 & tab$r.pitch>0.9 & tab$r.heading>0.9  & is.na(tab$DswGG)==F
tab <- tab[filterBool & !is.na(filterBool),]
fitName <- "_f_pitch30_depth100"
whales <- unique(tab$whale.id)
# load the selected model
m<-1
load(paste(modelDir,modelName[m], fitName, ".Rd", sep=""))
fitName <- "_f_pitch30_depth100_rpitch999_thinned"
whales <- unique(tab$whale.id)
# load the selected model
m<-1
load(paste(modelDir,modelName[m], fitName, ".Rd", sep=""))
### make summary table for GLOBAL mean
summary.g<-matrix(data=NA, nrow = 1, ncol = 16)
colnames(summary.g)<-c("meanBD.g", "L95BD.g", "U95BD.g","95rangeBD.g", "meanCdAM.g", "L95CdAM.g", "U95CdAM.g", "95rangeCdAM.g",
"meanVair", "L95Vair", "U95Vair", "95rangeVair.g", "meanCompr", "L95Compr", "U95Compr", "95rangeCompr")
summary.g[1]<-signif(mean(fit$BUGSoutput$sims.list$body.density.g), digits = 5)                 # mean global body density
summary.g[2]<-signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025), digits=5)  #lower 95% CRI global body density
summary.g[3]<- signif(quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975), digits=5)  #upper 95% CRI global body density
summary.g[4]<- signif((quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$body.density.g, prob=0.025)), digits=5)     # 95%CRI range for global body density
summary.g[5]<-signif(mean(fit$BUGSoutput$sims.list$CdAM.g), digits = 3)              # mean global CdAM
summary.g[6]<-signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025), digits=3)  #lower 95% CRI global CdAM
summary.g[7]<- signif(quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975), digits=3)  #upper 95% CRI global CdAM
summary.g[8]<- signif((quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$CdAM.g, prob=0.025)), digits=3)    # 95%CRI range for global CdAM
summary.g[9]<-signif(mean(fit$BUGSoutput$sims.list$Vair), digits = 6)                # mean global global Vair
summary.g[10]<-signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025), digits=3)  #lower 95% CRI global Vair
summary.g[11]<- signif(quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975), digits=3)  #upper 95% CRI global Vair
summary.g[12]<- signif((quantile(fit$BUGSoutput$sims.list$Vair, prob=0.975)
- quantile(fit$BUGSoutput$sims.list$Vair, prob=0.025)), digits=3)      # 95%CRI range for global Vair
summary.g[13]<-signif(mean(fit$BUGSoutput$sims.list$compr), digits = 3)                # mean compressibility
summary.g[14]<-signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.025), digits=3)  #lower 95% CRI compressibility
summary.g[15]<- signif(quantile(fit$BUGSoutput$sims.list$compr, prob=0.975), digits=3)  #upper 95% CRI compressibility
summary.g[16]<- signif((quantile(fit$BUGSoutput$sims.list$compr, prob=0.975)
-quantile(fit$BUGSoutput$sims.list$compr, prob=0.025)), digits=3)    # 95%CRI range for compressibility
write.csv(summary.g, file=paste(modelDir, modelName[m], fitName, "_Estimates_global.csv", sep=""))
### make summary table for WHALE-BY-WHALE mean
if(length(fit$BUGSoutput$mean$body.density)==length(whales) ||length(fit$BUGSoutput$mean$CdAM)==length(whales)||
length(fit$BUGSoutput$mean$Vair.d)==length(whales)){
summary.indiv<-matrix(data=NA, nrow=length(whales), ncol=14)
colnames(summary.indiv)<-c("ID", "numGlides", "meanBD", "L95BD", "U95BD", "95rangeBD", "meanCdAM", "L95CdAM",
"U95CdAM", "95rangeCdAM", "meanVair", "L95Vair", "U95Vair",  "95rangeVair")
}
summary.indiv[,1]<-whales
for(j in 1:length(whales)){
filterbool2<-tab$whale.num==j
tab2<-tab[filterbool2,]
summary.indiv[j,2]<-nrow(tab2)    #Number of glides used for the model
}
# when the selected model include indiv-specific Vair
if(ncol(fit$BUGSoutput$sims.list$body.density)==length(whales)){
for(j in 1:length(whales)){
summary.indiv[j,3]<-signif(mean(fit$BUGSoutput$sims.list$body.density[,j]), digits=6)    #mean whale-by-whale body denity
summary.indiv[j,4]<-signif(quantile(fit$BUGSoutput$sims.list$body.density[,j], prob=0.025), digits=5)  #L95% CRI mean whale-by-whale body denity
summary.indiv[j,5]<- signif(quantile(fit$BUGSoutput$sims.list$body.density[,j], prob=0.975), digits=5)  #U95% CRI mean whale-by-whale body denity
summary.indiv[j,6]<-signif((quantile(fit$BUGSoutput$sims.list$body.density[,j], prob=0.975)
-quantile(fit$BUGSoutput$sims.list$body.density[,j], prob=0.025)), digits=5)      #U95% CRI range whale-by-whale body density
}
}
# when the selected model include indiv-specific CdAM
if(ncol(fit$BUGSoutput$sims.list$CdAM)==length(whales)){
for(j in 1:length(whales)){
summary.indiv[j,7]<-signif(mean(fit$BUGSoutput$sims.list$CdAM[,j]), digits=3)   #mean whale-by-whale CdAM
summary.indiv[j,8]<-signif(quantile(fit$BUGSoutput$sims.list$CdAM[,j], prob=0.025), digits=3)  #L95% CRI whale-by-whale CdAM
summary.indiv[j,9]<-signif(quantile(fit$BUGSoutput$sims.list$CdAM[,j], prob=0.975), digits=3)  #U95% CRI whale-by-whale CdAM
summary.indiv[j,10]<-signif((quantile(fit$BUGSoutput$sims.list$CdAM[,j], prob=0.975)
-quantile(fit$BUGSoutput$sims.list$CdAM[,j], prob=0.025)), digits=3)    #U95% CRI whale-by-whale CdAM
}
}
# when the selected model include indiv-specific Vair
if(ncol(fit$BUGSoutput$sims.list$Vair.d)==length(whales)){
for(j in 1:length(whales)){
summary.indiv[j,11]<-signif(mean(fit$BUGSoutput$sims.list$Vair.d[,j]), digits=3) #mean whale-by-whale Vair
summary.indiv[j,12]<-signif(quantile(fit$BUGSoutput$sims.list$Vair.d[,j], prob=0.025), digits=3)  #L95% CRI whale-by-whale Vair
summary.indiv[j,13]<-signif(quantile(fit$BUGSoutput$sims.list$Vair.d[,j], prob=0.975), digits=3)  #U95% CRI whale-by-whale Vair
summary.indiv[j,14]<-signif((quantile(fit$BUGSoutput$sims.list$Vair.d[,j], prob=0.975)
-quantile(fit$BUGSoutput$sims.list$Vair.d[,j], prob=0.025)), digits=3)   #U95% CRI range whale-by-whale Vair
}
}
write.csv(summary.indiv, file=paste(modelDir, modelName[m], fitName, "_Estimates_indiv.csv", sep=""))
summary.indiv[j,3]
